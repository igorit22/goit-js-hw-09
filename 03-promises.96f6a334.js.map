{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIAQ,SAASC,cAAc,SAC/BC,iBAAiB,UAAUC,IAC9BA,EAAMC,iBACN,MAAMC,EAAQC,OAAOH,EAAMI,OAAOC,SAAShB,MAAMiB,OAC3CC,EAAOJ,OAAOH,EAAMI,OAAOC,SAASE,KAAKD,OACzCE,EAASL,OAAOH,EAAMI,OAAOC,SAASG,OAAOF,OAEnD,GAAIJ,EAAQ,GAAKK,EAAO,GAAKC,EAAS,EACpCC,EAAAxB,GAASyB,OAAOC,QAAQ,wCAI1B,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAQI,IAAK,CAGhCzB,EAFiByB,EACIV,GAASU,EAAI,GAAKL,GAEpCM,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAAxB,GAASyB,OAAOI,QAAQ,qBAAqB1B,QAAeC,MAAU,IAEvE0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBoB,EAAAxB,GAASyB,OAAOC,QAAQ,oBAAoBvB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const delay = Number(event.target.elements.delay.value);\n  const step = Number(event.target.elements.step.value);\n  const amount = Number(event.target.elements.amount.value);\n\n  if (delay < 0 || step < 0 || amount < 0) {\n    Notiflix.Notify.failure('Input values cannot be negative');\n    return;\n  }\n\n  for (let i = 1; i <= amount; i++) {\n    const position = i;\n    const promiseDelay = delay + (i - 1) * step;\n    createPromise(position, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","Number","target","elements","value","step","amount","$parcel$interopDefault","Notify","failure","i","then","success","catch"],"version":3,"file":"03-promises.96f6a334.js.map"}